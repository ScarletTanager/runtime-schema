// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/runtime-schema/cb"
	"github.com/cloudfoundry-incubator/runtime-schema/models"
)

type FakeCellClient struct {
	StopLRPInstanceStub        func(cellAddr string, lrp models.ActualLRP) error
	stopLRPInstanceMutex       sync.RWMutex
	stopLRPInstanceArgsForCall []struct {
		cellAddr string
		lrp      models.ActualLRP
	}
	stopLRPInstanceReturns struct {
		result1 error
	}
}

func (fake *FakeCellClient) StopLRPInstance(cellAddr string, lrp models.ActualLRP) error {
	fake.stopLRPInstanceMutex.Lock()
	fake.stopLRPInstanceArgsForCall = append(fake.stopLRPInstanceArgsForCall, struct {
		cellAddr string
		lrp      models.ActualLRP
	}{cellAddr, lrp})
	fake.stopLRPInstanceMutex.Unlock()
	if fake.StopLRPInstanceStub != nil {
		return fake.StopLRPInstanceStub(cellAddr, lrp)
	} else {
		return fake.stopLRPInstanceReturns.result1
	}
}

func (fake *FakeCellClient) StopLRPInstanceCallCount() int {
	fake.stopLRPInstanceMutex.RLock()
	defer fake.stopLRPInstanceMutex.RUnlock()
	return len(fake.stopLRPInstanceArgsForCall)
}

func (fake *FakeCellClient) StopLRPInstanceArgsForCall(i int) (string, models.ActualLRP) {
	fake.stopLRPInstanceMutex.RLock()
	defer fake.stopLRPInstanceMutex.RUnlock()
	return fake.stopLRPInstanceArgsForCall[i].cellAddr, fake.stopLRPInstanceArgsForCall[i].lrp
}

func (fake *FakeCellClient) StopLRPInstanceReturns(result1 error) {
	fake.StopLRPInstanceStub = nil
	fake.stopLRPInstanceReturns = struct {
		result1 error
	}{result1}
}

var _ cb.CellClient = new(FakeCellClient)
