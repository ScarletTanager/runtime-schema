// This file was generated by counterfeiter
package fake_bbs

import (
	"sync"

	"github.com/cloudfoundry-incubator/runtime-schema/bbs"
	"github.com/cloudfoundry-incubator/runtime-schema/bbs/services_bbs"
)

type FakeConvergerBBS struct {
	CellEventsStub        func() <-chan services_bbs.CellEvent
	cellEventsMutex       sync.RWMutex
	cellEventsArgsForCall []struct{}
	cellEventsReturns struct {
		result1 <-chan services_bbs.CellEvent
	}
}

func (fake *FakeConvergerBBS) CellEvents() <-chan services_bbs.CellEvent {
	fake.cellEventsMutex.Lock()
	fake.cellEventsArgsForCall = append(fake.cellEventsArgsForCall, struct{}{})
	fake.cellEventsMutex.Unlock()
	if fake.CellEventsStub != nil {
		return fake.CellEventsStub()
	} else {
		return fake.cellEventsReturns.result1
	}
}

func (fake *FakeConvergerBBS) CellEventsCallCount() int {
	fake.cellEventsMutex.RLock()
	defer fake.cellEventsMutex.RUnlock()
	return len(fake.cellEventsArgsForCall)
}

func (fake *FakeConvergerBBS) CellEventsReturns(result1 <-chan services_bbs.CellEvent) {
	fake.CellEventsStub = nil
	fake.cellEventsReturns = struct {
		result1 <-chan services_bbs.CellEvent
	}{result1}
}

var _ bbs.ConvergerBBS = new(FakeConvergerBBS)
